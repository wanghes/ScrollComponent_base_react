{"ast":null,"code":"import _classCallCheck from \"/Users/hs/other/react/ScrollComponent_base_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hs/other/react/ScrollComponent_base_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hs/other/react/ScrollComponent_base_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hs/other/react/ScrollComponent_base_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hs/other/react/ScrollComponent_base_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/hs/other/react/ScrollComponent_base_react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/hs/other/react/ScrollComponent_base_react/src/Scroll.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //http://api.mntools.xyz/articles?offset=10&pagesize=10\n\nvar Scroll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scroll, _Component);\n\n  function Scroll(props, context) {\n    var _this;\n\n    _classCallCheck(this, Scroll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scroll).call(this, props));\n    _this.state = {\n      translate: 0,\n      // 位移\n      pullRefreshing: false,\n      //下拉刷新中\n      scrollLoading: false,\n      //滚动加载更多中\n      enablePullRefresh: true,\n      //下拉刷新\n      enableScrollLoadMore: true,\n      //滚动加载更多\n      data: []\n    };\n    _this.dropDownRefreshText = Scroll.XLSX;\n    _this.initPullRefresh = _this.initPullRefresh.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.initScrollLoadMore = _this.initScrollLoadMore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Scroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        translate: 0,\n        enablePullRefresh: this.props.enablePullRefresh,\n        enableScrollLoadMore: this.props.enableScrollLoadMore\n      });\n      this.initPullRefresh();\n      this.initScrollLoadMore();\n    }\n  }, {\n    key: \"initPullRefresh\",\n    value: function initPullRefresh() {\n      var self = this;\n      var isTouchStart = false; //是否已经触发下拉条件\n\n      var isTouchMove = false; // 是否已经开始下拉\n\n      var startX, startY;\n      var supportTouch = 'ontouchstart' in window;\n\n      if (this.state.enablePullRefresh) {\n        this.refs.scroller.addEventListener('touchstart', touchStart, false);\n        this.refs.scroller.addEventListener('touchmove', touchMove, false);\n        this.refs.scroller.addEventListener('touchend', touchEnd, false);\n        this.refs.scroller.addEventListener('mousedown', touchStart, false);\n        this.refs.scroller.addEventListener('mousemove', touchMove, false);\n        this.refs.scroller.addEventListener('mouseup', touchEnd, false);\n      }\n\n      function touchStart(event) {\n        if (self.refs.scroller.scrollTop <= 0) {\n          isTouchStart = true;\n          startX = supportTouch ? event.changedTouches[0].pageX : event.pageX;\n          startY = supportTouch ? event.changedTouches[0].pageY : event.pageY;\n        }\n      }\n\n      function touchMove(event) {\n        if (!isTouchStart) {\n          return;\n        }\n\n        var distanceY = supportTouch ? event.changedTouches[0].pageY - startY : event.pageY - startY;\n        var distanceX = supportTouch ? event.changedTouches[0].pageX - startX : event.pageX - startX;\n\n        if (distanceX > distanceY) {\n          // console.log(distanceX, distanceY);\n          return;\n        }\n\n        if (distanceY > 0) {\n          self.setState({\n            translate: Math.pow((supportTouch ? event.changedTouches[0].pageY : event.pageY) - startY, 0.85)\n          });\n        } else {\n          if (self.state.translate !== 0) {\n            self.setState({\n              translate: 0\n            });\n            self.transformScroller(0, self.state.translate);\n          }\n        }\n\n        if (distanceY > 0) {\n          if (!isTouchMove) {\n            isTouchMove = true;\n          }\n\n          if (self.state.translate <= Scroll.PullDownValve) {\n            // 下拉中，但还没到刷新阀值\n            if (self.dropDownRefreshText !== Scroll.XLSX) {\n              self.refs.dropDownRefreshText.innerHTML = self.dropDownRefreshText = Scroll.XLSX;\n            }\n          } else {\n            // 下拉中，已经达到刷新阀值\n            if (self.dropDownRefreshText !== Scroll.SKJZ) {\n              self.refs.dropDownRefreshText.innerHTML = self.dropDownRefreshText = Scroll.SKJZ;\n            }\n          }\n\n          self.transformScroller(0, self.state.translate);\n        }\n      }\n\n      function touchEnd() {\n        isTouchMove = false;\n        if (!isTouchStart) return;\n        isTouchStart = false;\n\n        if (self.state.translate < Scroll.PullDownValve) {\n          self.transformScroller(0.3, 0); //设置在下拉刷新状态中\n        } else {\n          self.setState({\n            pullRefreshing: true\n          });\n          self.transformScroller(0.6, 0);\n          self.refs.dropDownRefreshText.innerHTML = this.dropDownRefreshText = Scroll.JZZ;\n          self.props.onRefresh(); // 触发冲外面传进来的刷新回调函数\n        }\n      }\n    }\n  }, {\n    key: \"initScrollLoadMore\",\n    value: function initScrollLoadMore() {\n      var self = this; // 监听滚动加载\n\n      if (this.state.enableScrollLoadMore) {\n        self.refs.scroller.addEventListener('scroll', scrolling, false);\n      }\n\n      function scrolling() {\n        console.log(self.refs.scroller.scrollHeight);\n        console.log(self.refs.scroller.scrollTop);\n        console.log(self.refs.scroller.getBoundingClientRect().height);\n        if (self.state.scrollLoading) return;\n        var scrollerscrollHeight = self.refs.scroller.scrollHeight; // 容器滚动总高度\n\n        var scrollerHeight = self.refs.scroller.getBoundingClientRect().height; // 容器滚动可见高度\n\n        var scrollerTop = self.refs.scroller.scrollTop; //滚过的高度\n        // 达到滚动加载阀值\n\n        if (scrollerscrollHeight - scrollerHeight - scrollerTop <= Scroll.ScrollLoadValve) {\n          self.setState({\n            scrollLoading: true\n          });\n          self.props.onLoadMore();\n        }\n      }\n    }\n    /**\n     * 利用 transition 和transform  改变位移\n     * @param time 时间\n     * @param translate  距离\n     */\n\n  }, {\n    key: \"transformScroller\",\n    value: function transformScroller(time, translate) {\n      this.setState({\n        translate: translate\n      });\n      var elStyle = this.refs.scroller.style;\n      elStyle.webkitTransition = elStyle.MozTransition = elStyle.transition = 'all ' + time + 's ease-in-out';\n      elStyle.webkitTransform = elStyle.MozTransform = elStyle.transform = 'translate3d(0, ' + translate + 'px, 0)';\n    }\n    /**\n     * 下拉刷新完毕\n     */\n\n  }, {\n    key: \"pullRefreshingDone\",\n    value: function pullRefreshingDone() {\n      this.setState({\n        pullRefreshing: false\n      });\n      this.transformScroller(0.1, 0);\n    }\n    /**\n     * 滚动加载完毕\n     */\n\n  }, {\n    key: \"scrollLoadingDone\",\n    value: function scrollLoadingDone() {\n      console.log(11);\n      this.setState({\n        scrollLoading: false\n      });\n      this.refs.dropDownRefreshText.innerHTML = this.dropDownRefreshText = Scroll.XLJZ;\n    }\n    /**\n     * 当有新的属性需要更新时。也就是网络数据回来之后\n     * @param nextProps\n     */\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var self = this;\n      this.setState({\n        data: nextProps.article\n      }); //把新的数据填进列表\n\n      if (this.state.pullRefreshing) {\n        //如果之前是下拉刷新状态，恢复\n        setTimeout(function () {\n          self.pullRefreshingDone();\n        }, 1000);\n      }\n\n      if (this.state.scrollLoading) {\n        //如果之前是滚动加载状态，恢复\n        setTimeout(function () {\n          self.scrollLoadingDone();\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      var getItem = this.props.getItem;\n      return React.createElement(\"div\", {\n        className: \"scroller\",\n        ref: \"scroller\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"drop-down-refresh-layer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"drop-down-refresh-text\",\n        ref: \"dropDownRefreshText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"\\u4E0B\\u62C9\\u52A0\\u8F7D\")), React.createElement(\"div\", {\n        className: \"scroller-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"left_four_ul\",\n        id: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, data.map(function (item) {\n        //通过map循环把子列表数据展示出来\n        return getItem(item);\n      }))), React.createElement(\"div\", {\n        className: \"scroll-loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"\\u52A0\\u8F7D\\u4E2D...\")));\n    }\n  }]);\n\n  return Scroll;\n}(Component);\n\nScroll.XLSX = \"下拉刷新\";\nScroll.SKJZ = '松开加载';\nScroll.GDJZGD = \"滚动加载更多\";\nScroll.JZZ = \"加载中...\";\nScroll.PullDownValve = 50;\nScroll.ScrollLoadValve = 50;\nexport default Scroll;","map":{"version":3,"sources":["/Users/hs/other/react/ScrollComponent_base_react/src/Scroll.js"],"names":["React","Component","Scroll","props","context","state","translate","pullRefreshing","scrollLoading","enablePullRefresh","enableScrollLoadMore","data","dropDownRefreshText","XLSX","initPullRefresh","bind","initScrollLoadMore","setState","self","isTouchStart","isTouchMove","startX","startY","supportTouch","window","refs","scroller","addEventListener","touchStart","touchMove","touchEnd","event","scrollTop","changedTouches","pageX","pageY","distanceY","distanceX","Math","pow","transformScroller","PullDownValve","innerHTML","SKJZ","JZZ","onRefresh","scrolling","console","log","scrollHeight","getBoundingClientRect","height","scrollerscrollHeight","scrollerHeight","scrollerTop","ScrollLoadValve","onLoadMore","time","elStyle","style","webkitTransition","MozTransition","transition","webkitTransform","MozTransform","transform","XLJZ","nextProps","article","setTimeout","pullRefreshingDone","scrollLoadingDone","getItem","map","item","GDJZGD"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n//http://api.mntools.xyz/articles?offset=10&pagesize=10\n\nclass Scroll extends Component {\n    static XLSX = \"下拉刷新\";\n    static SKJZ = '松开加载';\n    static GDJZGD = \"滚动加载更多\";\n    static JZZ = \"加载中...\";\n    static PullDownValve = 50;\n    static ScrollLoadValve = 50;\n\n\n    constructor(props, context) {\n        super(props);\n        this.state = {\n            translate: 0, // 位移\n            pullRefreshing: false, //下拉刷新中\n            scrollLoading: false, //滚动加载更多中\n            enablePullRefresh: true, //下拉刷新\n            enableScrollLoadMore: true, //滚动加载更多\n            data:[]\n        };\n        this.dropDownRefreshText = Scroll.XLSX;\n        this.initPullRefresh = this.initPullRefresh.bind(this);\n        this.initScrollLoadMore = this.initScrollLoadMore.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            translate: 0,\n            enablePullRefresh: this.props.enablePullRefresh,\n            enableScrollLoadMore: this.props.enableScrollLoadMore\n        });\n        this.initPullRefresh();\n        this.initScrollLoadMore();\n    }\n\n    initPullRefresh() {\n        let self = this;\n        let isTouchStart = false; //是否已经触发下拉条件\n        let isTouchMove = false; // 是否已经开始下拉\n        let startX, startY;\n        let supportTouch = 'ontouchstart' in window;\n\n        if (this.state.enablePullRefresh) {\n            this.refs.scroller.addEventListener('touchstart', touchStart, false);\n            this.refs.scroller.addEventListener('touchmove', touchMove, false);\n            this.refs.scroller.addEventListener('touchend', touchEnd, false);\n            this.refs.scroller.addEventListener('mousedown', touchStart, false);\n            this.refs.scroller.addEventListener('mousemove', touchMove, false);\n            this.refs.scroller.addEventListener('mouseup', touchEnd, false);\n        }\n\n        function touchStart(event) {\n            if (self.refs.scroller.scrollTop <= 0) {\n                isTouchStart = true;\n                startX = supportTouch ? event.changedTouches[0].pageX : event.pageX;\n                startY = supportTouch ? event.changedTouches[0].pageY : event.pageY;\n            }\n        }\n\n        function touchMove(event) {\n            if (!isTouchStart) {\n                return;\n            }\n            let distanceY = supportTouch ? event.changedTouches[0].pageY - startY : event.pageY - startY;\n            let distanceX = supportTouch ? event.changedTouches[0].pageX - startX : event.pageX - startX;\n            if (distanceX > distanceY) {\n                // console.log(distanceX, distanceY);\n                return;\n            }\n\n            if (distanceY > 0) {\n                self.setState({\n                    translate: Math.pow((supportTouch ? event.changedTouches[0].pageY : event.pageY) - startY, 0.85)\n                });\n            } else {\n                if (self.state.translate !== 0) {\n                    self.setState({\n                        translate: 0\n                    });\n                    self.transformScroller(0, self.state.translate);\n                }\n            }\n\n            if (distanceY > 0) {\n                if (!isTouchMove) {\n                    isTouchMove = true;\n                }\n\n                if (self.state.translate <= Scroll.PullDownValve) { // 下拉中，但还没到刷新阀值\n                    if (self.dropDownRefreshText !== Scroll.XLSX) {\n                        self.refs.dropDownRefreshText.innerHTML = (self.dropDownRefreshText = Scroll.XLSX);\n                    }\n                } else { // 下拉中，已经达到刷新阀值\n                    if (self.dropDownRefreshText !== Scroll.SKJZ) {\n                        self.refs.dropDownRefreshText.innerHTML = (self.dropDownRefreshText = Scroll.SKJZ);\n                    }\n                }\n                self.transformScroller(0, self.state.translate);\n            }\n        }\n\n        function touchEnd() {\n            isTouchMove = false;\n            if (!isTouchStart) return;\n            isTouchStart = false;\n            if (self.state.translate < Scroll.PullDownValve) {\n                self.transformScroller(0.3, 0); //设置在下拉刷新状态中\n            } else {\n                self.setState({\n                    pullRefreshing: true\n                });\n                self.transformScroller(0.6, 0);\n                self.refs.dropDownRefreshText.innerHTML = (this.dropDownRefreshText = Scroll.JZZ);\n                self.props.onRefresh(); // 触发冲外面传进来的刷新回调函数\n            }\n        }\n    }\n\n    initScrollLoadMore() {\n        var self = this;\n        // 监听滚动加载\n        if (this.state.enableScrollLoadMore) {\n            self.refs.scroller.addEventListener('scroll', scrolling, false);\n        }\n\n        function scrolling() {\n            console.log(self.refs.scroller.scrollHeight);\n            console.log(self.refs.scroller.scrollTop);\n            console.log(self.refs.scroller.getBoundingClientRect().height);\n            if (self.state.scrollLoading) return;\n            var scrollerscrollHeight = self.refs.scroller.scrollHeight; // 容器滚动总高度\n            var scrollerHeight = self.refs.scroller.getBoundingClientRect().height;// 容器滚动可见高度\n            var scrollerTop = self.refs.scroller.scrollTop;//滚过的高度\n            // 达到滚动加载阀值\n            if (scrollerscrollHeight - scrollerHeight - scrollerTop <= Scroll.ScrollLoadValve) {\n                self.setState({scrollLoading: true});\n                self.props.onLoadMore();\n            }\n        }\n    }\n\n\n    /**\n     * 利用 transition 和transform  改变位移\n     * @param time 时间\n     * @param translate  距离\n     */\n    transformScroller(time, translate) {\n        this.setState({translate: translate});\n        var elStyle = this.refs.scroller.style;\n        elStyle.webkitTransition = elStyle.MozTransition = elStyle.transition = 'all ' + time + 's ease-in-out';\n        elStyle.webkitTransform = elStyle.MozTransform = elStyle.transform = 'translate3d(0, ' + translate + 'px, 0)';\n    }\n\n\n\n    /**\n     * 下拉刷新完毕\n     */\n    pullRefreshingDone() {\n        this.setState({pullRefreshing: false});\n        this.transformScroller(0.1, 0);\n    }\n\n    /**\n     * 滚动加载完毕\n     */\n    scrollLoadingDone() {\n        console.log(11)\n        this.setState({scrollLoading: false});\n        this.refs.dropDownRefreshText.innerHTML = (this.dropDownRefreshText = Scroll.XLJZ);\n    }\n\n    /**\n     * 当有新的属性需要更新时。也就是网络数据回来之后\n     * @param nextProps\n     */\n    componentWillReceiveProps(nextProps) {\n        var self = this;\n        this.setState({data: nextProps.article,});//把新的数据填进列表\n        if (this.state.pullRefreshing) {//如果之前是下拉刷新状态，恢复\n            setTimeout(function () {\n                self.pullRefreshingDone();\n            }, 1000);\n        }\n        if (this.state.scrollLoading) {//如果之前是滚动加载状态，恢复\n            setTimeout(function () {\n                self.scrollLoadingDone();\n            }, 1000);\n        }\n    }\n\n\n    render() {\n        const { data } = this.state;\n        const { getItem } = this.props;\n        return (\n            <div className=\"scroller\" ref=\"scroller\">\n                <div className=\"drop-down-refresh-layer\">\n                    <p className=\"drop-down-refresh-text\" ref=\"dropDownRefreshText\">下拉加载</p>\n                </div>\n                <div className=\"scroller-content\">\n                    <div className=\"content\">\n                        <ul className=\"left_four_ul\" id=\"list\">\n                            {\n                                data.map(function (item) {//通过map循环把子列表数据展示出来\n                                    return getItem(item);\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <div className=\"scroll-loading\">加载中...</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Scroll;\n"]},"metadata":{},"sourceType":"module"}